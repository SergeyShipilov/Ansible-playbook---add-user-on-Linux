---
- name: creating groups
  group:
    name: "{{ item.name }}"
    gid: "{{ item.gid | default(omit) }}"
  with_items: "{{ groups_to_create }}"
  tags: ["users", "groups", "configuration"]

- name: per-user group creation
  group:
    name: "{{ item.username }}"
    gid: "{{ item.gid | default(item.uid) | default(omit) }}"
  with_items: "{{ users }}"
  when: "'group' not in item and users_create_per_user_group"
  tags: ["users", "configuration"]

- name: user creation
  user:
    name: "{{ item.username }}"
    group: "{{ item.group | default(item.username if users_create_per_user_group else users_group) }}"
    # empty string removes user from all secondary groups
    groups: "{{ item.groups | join(',') if 'groups' in item else '' }}"
    append: "{{ item.append | default(omit) }}"
    shell: "{{ item.shell if item.shell is defined else users_default_shell }}"
    password: "{{ item.password if item.password is defined else '*' }}"
    comment: "{{ item.name if item.name is defined else '' }}"
    uid: "{{ item.uid | default(omit) }}"
    home: "{{ item.home | default('/home/' + item.username) }}"
    createhome: "{{ 'yes' if users_create_homedirs else 'no' }}"
    generate_ssh_key: "{{ item.generate_ssh_key | default(omit) }}"
    update_password: "{{ item.update_password | default(omit) }}"
  with_items: "{{ users }}"
  tags: ["users", "configuration"]

- name: ssh keys
  authorized_key:
    user: "{{ item.0.username }}"
    key: "{{ item.1 }}"
    path: "{{ item.0.home | default('/home/' + item.0.username) }}/{{ authorized_keys_file }}"
    exclusive: false
  with_subelements:
    - "{{ users }}"
    - ssh_key
    - skip_missing: yes
  tags: ["users", "configuration"]

- name: setup user profiles
  blockinfile:
    block: "{{ item.profile }}"
    dest: "{{ item.home | default('/home/' + item.username) }}/.profile"
    owner: "{{ item.username }}"
    group: "{{ item.group | default(item.username if users_create_per_user_group else users_group) }}"
    mode: 0644
    create: true
  when: users_create_homedirs and item.profile is defined
  with_items: "{{ users }}"

- name: add user to sudo
  ansible.builtin.lineinfile:
    path: /etc/sudoers.d/{{ item.username }}
    regexp: '^{{ item.username }}'
    line: "{{ item.priv }}"
    state: present
    mode: 0440
    create: yes
    validate: 'visudo -cf %s'
  when: item.priv is defined
  with_items: "{{ users }}"

- name: deleted user removal
  user:
    name: "{{ item.username }}"
    state: absent
    remove: "{{ item.remove | default(omit) }}"
    force: "{{ item.force | default(omit) }}"
  with_items: "{{ users_deleted }}"
  tags: ["users", "configuration"]

- name: deleted per-user group removal
  group:
    name: "{{ item.username }}"
    state: absent
  with_items: "{{ users_deleted }}"
  when: users_create_per_user_group
  tags: ["users", "configuration"]

- name: remove file from sudo
  ansible.builtin.file:
    path: /etc/sudoers.d/{{ item.username }}
    state: absent
  with_items: "{{ users_deleted }}"

- name: recursively remove home directory
  ansible.builtin.file:
    path: /home/{{ item.username }}
    state: absent
  with_items: "{{ users_deleted }}"
